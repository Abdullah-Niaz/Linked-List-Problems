Find out the mid node & make it a root
root -> left = t1 
root -> right = t2 
return root


1. Traverse the linked list 
2. count & divide by 2 to take the mid 
3. make the that as a root
	root = new Treenode(o);
	root->left = maketree(left)
	root->right= maketree(right)




second approach is Here & tortose
1. Take two pointers 
	slow = head
	fast = head
2. Move the slow pointer by 1
3. Move the head poitner by 2
4  slow pointer will always be at the mid 
5. break down from the mid to make the equalant linked list
6. make the head as a root further 
7. slow as a left node